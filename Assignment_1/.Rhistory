}
print("===================================================")
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
for (x in cat1_list){
rhc$x <- as.numeric(rhc$cat1 == x)
#print(x)
}
print("===================================================")
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
for (x in cat1_list){
x <- as.numeric(rhc$cat1 == x)
#print(x)
}
print("===================================================")
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
for (x in cat1_list){
x <- as.numeric(rhc$cat1 == x)
rhc$x <- x
#print(x)
}
print("===================================================")
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
for (x in cat1_list){
x <- as.numeric(rhc$cat1 == x)
rhc[x] <- x
#print(x)
}
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
for (x in cat1_list){
new <- as.numeric(rhc$cat1 == x)
rhc[nrow(rhc) + 1]
#print(x)
}
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
for (x in cat1_list){
new <- as.numeric(rhc$cat1 == x)
rhc[nrow(rhc) + 1] <- new
#print(x)
}
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
# for (x in cat1_list){
#   new <- as.numeric(rhc$cat1 == x)
#   rhc[nrow(rhc) + 1] <- new
#   #print(x)
#}
data_new <- sapply(rhc, unclass)
print("===================================================")
View(data_new)
View(data_new)
View(rhc)
View(rhc)
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
print(cat1_list)
print("===================================================")
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
#print(cat1_list)
###########to be optimised later on
rhc$CHF <- as.numeric(rhc$cat1=='CHF')
rhc$Cirrhosis <- as.numeric(rhc$cat1=='Cirrhosis')
rhc$Colon_Cancer <- as.numeric(rhc$cat1=='Colon Cancer')
rhc$Coma <- as.numeric(rhc$cat1=='Coma')
rhc$COPD <- as.numeric(rhc$cat1=='COPD')
rhc$Lung_Cancer <- as.numeric(rhc$cat1=='Lung Cancer')
rhc$MOSF_Malignancy <- as.numeric(rhc$cat1=='MOSF w/Malignancy')
rhc$MOSF_Sepsis <- as.numeric(rhc$cat1=='MOSF w/Sepsis')
print("===================================================")
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
print(cat1_list)
###########to be optimised later on
rhc$CHF <- as.numeric(rhc$cat1=='CHF')
rhc$Cirrhosis <- as.numeric(rhc$cat1=='Cirrhosis')
rhc$Colon_Cancer <- as.numeric(rhc$cat1=='Colon Cancer')
rhc$Coma <- as.numeric(rhc$cat1=='Coma')
rhc$COPD <- as.numeric(rhc$cat1=='COPD')
rhc$Lung_Cancer <- as.numeric(rhc$cat1=='Lung Cancer')
rhc$MOSF_Malignancy <- as.numeric(rhc$cat1=='MOSF w/Malignancy')
rhc$MOSF_Sepsis <- as.numeric(rhc$cat1=='MOSF w/Sepsis')
print("===================================================")
rhc.small <- rhc[[ "ARF", "CHF", "Cirrhosis","Colon_Cancer","Coma", "COPD","Lung_Cancer", "MOSF_Malignancy", "MOSF_Sepsis", "cardiohx", "chfhx", "dementhx", "psychhx",  "chrpulhx", "renalhx", "liverhx",  "gibledhx", "malighx",  "immunhx",  "transhx",  "amihx", "age", "female", "edu", "das2d3pc", "aps1", "scoma1", "meanbp1", "wblc1","hrt1","resp1", "temp1","pafi1","alb1","hema1","bili1","crea1","sod1","pot1","paco21","ph1","wtkilo1","dnr1","resp", "card","neuro", "gastr","renal","meta","hema","seps","trauma", "ortho","adld3p","urin1","treatment.swang","outcome.died"]]
rhc.small <- rhc[[ "ARF", "CHF", "Cirrhosis","Colon_Cancer","Coma", "COPD","Lung_Cancer", "MOSF_Malignancy", "MOSF_Sepsis", "cardiohx", "chfhx", "dementhx", "psychhx",  "chrpulhx", "renalhx", "liverhx",  "gibledhx", "malighx",  "immunhx",  "transhx",  "amihx", "age", "female", "edu", "das2d3pc", "aps1", "scoma1", "meanbp1", "wblc1","hrt1","resp1", "temp1","pafi1","alb1","hema1","bili1","crea1","sod1","pot1","paco21","ph1","wtkilo1","dnr1","resp", "card","neuro", "gastr","renal","meta","hema","seps","trauma", "ortho","adld3p","urin1","treatment.swang","outcome.died"]].copy()
rhc.small <-
rhc[["ARF", "CHF", "Cirrhosis", "Colon_Cancer", "Coma", "COPD", "Lung_Cancer", "MOSF_Malignancy", "MOSF_Sepsis", "cardiohx", "chfhx", "dementhx", "psychhx",  "chrpulhx", "renalhx", "liverhx",  "gibledhx", "malighx",  "immunhx",  "transhx",  "amihx", "age", "female", "edu", "das2d3pc", "aps1", "scoma1", "meanbp1", "wblc1", "hrt1", "resp1", "temp1", "pafi1", "alb1", "hema1", "bili1", "crea1", "sod1", "pot1", "paco21", "ph1", "wtkilo1", "dnr1", "resp", "card", "neuro", "gastr", "renal", "meta", "hema", "seps", "trauma", "ortho", "adld3p", "urin1", "treatment.swang", "outcome.died"]].copy()
#"ARF", "CHF", "Cirrhosis", "Colon_Cancer", "Coma", "COPD", "Lung_Cancer", "MOSF_Malignancy", "MOSF_Sepsis",
rhc.small <-
rhc[[ "cardiohx", "chfhx", "dementhx", "psychhx",  "chrpulhx", "renalhx", "liverhx",  "gibledhx", "malighx",  "immunhx",  "transhx",  "amihx", "age", "female", "edu", "das2d3pc", "aps1", "scoma1", "meanbp1", "wblc1", "hrt1", "resp1", "temp1", "pafi1", "alb1", "hema1", "bili1", "crea1", "sod1", "pot1", "paco21", "ph1", "wtkilo1", "dnr1", "resp", "card", "neuro", "gastr", "renal", "meta", "hema", "seps", "trauma", "ortho", "adld3p", "urin1", "treatment.swang", "outcome.died"]].copy()
install.packages("tableone")
install.packages("Matching")
install.packages("tidyverse") #added
# Recommended: add "dplyr" if you have used it before to make efficient preprocessing.
install.packages("tableone")
install.packages("Matching")
install.packages("tidyverse") #added
install.packages("tableone")
install.packages("Matching")
install.packages("tidyverse") #added
# Recommended: add "dplyr" if you have used it before to make efficient preprocessing.
library(tableone) # This library allows us to calculate summary statistics about the variables including the SMD (standardized mean difference).
library(Matching) # This library will do the matching
library('dplyr')  #added
install.packages("tableone")
install.packages("Matching")
install.packages("tidyverse") #added
install.packages("tableone")
install.packages("Matching")
install.packages("tidyverse") #added
install.packages('rlang') #if needed
# Recommended: add "dplyr" if you have used it before to make efficient preprocessing.
library(tableone) # This library allows us to calculate summary statistics about the variables including the SMD (standardized mean difference).
library(Matching) # This library will do the matching
library('dplyr')  #added
# Download rhc dataset from CANVAS and read it
rhc <- read.csv("rhc.csv")
# Download rhc dataset from CANVAS and read it
rhc <- read.csv("rhc.csv")
print("===================================================")
# => how many rows does rhc contain?
print('The dataset contains 5735 rows')
# => What are the variable names?
print('The 63 variable names are the following below:')
names(rhc)
print("===================================================")
rhc$outcome.died <- as.numeric(rhc$death=='Yes')  # Again you might want, instead, to do all preprocessing with dplyr if you prefer
rhc$treatment.swang <- as.numeric(rhc$swang1=='RHC')
print("===================================================")
# => What is the mean of outcome.died in the whole data set?
print('The mean of outcome.died:')
mean(rhc$outcome.died)
# => How many subjects are treated?
print('The number of treated subjects:')
sum(rhc$swang1=='RHC')
# =>  What is the mean mortality (outcome.died) in this treated group?
print('The mean mortality of treated group:')
mean(rhc$swang1=='RHC' & rhc$outcome.died == 1)
# => How many subjects are not treated (i.e. in the control group)?
print('The number of not treated subjects:')
sum(rhc$swang1=='No RHC')
# => What is the mean mortality in this control group?
print('Mean mortality for not treated:')
mean(rhc$swang1=='No RHC' & rhc$outcome.died == 1)
print("===================================================")
print("===================================================")
# => How many different categories are in Cat1? Tip: use the levels() function on this variable.
rhc$cat1 <- as.factor(rhc$cat1)  #from chr to factor
print('There number of categories in cat1:')
nlevels(rhc$cat1)
print("===================================================")
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
print(cat1_list)
###########solution to be optimized later on
rhc$CHF <- as.numeric(rhc$cat1=='CHF')
rhc$Cirrhosis <- as.numeric(rhc$cat1=='Cirrhosis')
rhc$Colon_Cancer <- as.numeric(rhc$cat1=='Colon Cancer')
rhc$Coma <- as.numeric(rhc$cat1=='Coma')
rhc$COPD <- as.numeric(rhc$cat1=='COPD')
rhc$Lung_Cancer <- as.numeric(rhc$cat1=='Lung Cancer')
rhc$MOSF_Malignancy <- as.numeric(rhc$cat1=='MOSF w/Malignancy')
rhc$MOSF_Sepsis <- as.numeric(rhc$cat1=='MOSF w/Sepsis')
print("===================================================")
my_data %>% select(contains("ARF", "CHF", "Cirrhosis", "Colon_Cancer", "Coma", "COPD", "Lung_Cancer", "MOSF_Malignancy", "MOSF_Sepsis"))
rhc.small <- rhc
rhc.small %>% select(contains("ARF", "CHF", "Cirrhosis", "Colon_Cancer", "Coma", "COPD", "Lung_Cancer", "MOSF_Malignancy", "MOSF_Sepsis"))
rhc.small <- rhc
rhc.small %>% select(contains("ARF", "CHF", "Cirrhosis", "Colon_Cancer", "Coma", "COPD", "Lung_Cancer", "MOSF_Malignancy", "MOSF_Sepsis", "cardiohx", "chfhx", "dementhx", "psychhx",  "chrpulhx", "renalhx", "liverhx",  "gibledhx", "malighx",  "immunhx",  "transhx",  "amihx", "age", "female", "edu", "das2d3pc", "aps1", "scoma1", "meanbp1", "wblc1", "hrt1", "resp1", "temp1", "pafi1", "alb1", "hema1", "bili1", "crea1", "sod1", "pot1", "paco21", "ph1", "wtkilo1", "dnr1", "resp", "card", "neuro", "gastr", "renal", "meta", "hema", "seps", "trauma", "ortho", "adld3p", "urin1", "treatment.swang", "outcome.died"))
rhc.small <- rhc
install.packages("tableone")
install.packages("Matching")
install.packages("tidyverse") #added
install.packages('rlang')     #added
# Recommended: add "dplyr" if you have used it before to make efficient preprocessing.
library(tableone) # This library allows us to calculate summary statistics about the variables including the SMD (standardized mean difference).
library(Matching) # This library will do the matching
library('dplyr')  #added
# Download rhc dataset from CANVAS and read it
rhc <- read.csv("rhc.csv")
print("===================================================")
# => how many rows does rhc contain?
print('The dataset contains 5735 rows')
# => What are the variable names?
print('The 63 variable names are the following below:')
names(rhc)
print("===================================================")
rhc$outcome.died <- as.numeric(rhc$death=='Yes')  # Again you might want, instead, to do all preprocessing with dplyr if you prefer
rhc$treatment.swang <- as.numeric(rhc$swang1=='RHC')
print("===================================================")
# => What is the mean of outcome.died in the whole data set?
print('The mean of outcome.died:')
mean(rhc$outcome.died)
# => How many subjects are treated?
print('The number of treated subjects:')
sum(rhc$swang1=='RHC')
# =>  What is the mean mortality (outcome.died) in this treated group?
print('The mean mortality of treated group:')
mean(rhc$swang1=='RHC' & rhc$outcome.died == 1)
# => How many subjects are not treated (i.e. in the control group)?
print('The number of not treated subjects:')
sum(rhc$swang1=='No RHC')
# => What is the mean mortality in this control group?
print('Mean mortality for not treated:')
mean(rhc$swang1=='No RHC' & rhc$outcome.died == 1)
print("===================================================")
print("===================================================")
# => How many different categories are in Cat1? Tip: use the levels() function on this variable.
rhc$cat1 <- as.factor(rhc$cat1)  #from chr to factor
print('There number of categories in cat1:')
nlevels(rhc$cat1)
print("===================================================")
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
print(cat1_list)
# ------- solution to be optimized later on ---------
rhc$CHF <- as.numeric(rhc$cat1=='CHF')
rhc$Cirrhosis <- as.numeric(rhc$cat1=='Cirrhosis')
rhc$Colon_Cancer <- as.numeric(rhc$cat1=='Colon Cancer')
rhc$Coma <- as.numeric(rhc$cat1=='Coma')
rhc$COPD <- as.numeric(rhc$cat1=='COPD')
rhc$Lung_Cancer <- as.numeric(rhc$cat1=='Lung Cancer')
rhc$MOSF_Malignancy <- as.numeric(rhc$cat1=='MOSF w/Malignancy')
rhc$MOSF_Sepsis <- as.numeric(rhc$cat1=='MOSF w/Sepsis')
print("===================================================")
install.packages("tableone")
library(tableone) # This library allows us to calculate summary statistics about the variables including the SMD (standardized mean difference).
library(Matching) # This library will do the matching
library('dplyr')  #added
# Download rhc dataset from CANVAS and read it
rhc <- read.csv("rhc.csv")
print("===================================================")
# => how many rows does rhc contain?
print('The dataset contains 5735 rows')
# => What are the variable names?
print('The 63 variable names are the following below:')
names(rhc)
print("===================================================")
rhc$outcome.died <- as.numeric(rhc$death=='Yes')  # Again you might want, instead, to do all preprocessing with dplyr if you prefer
rhc$treatment.swang <- as.numeric(rhc$swang1=='RHC')
print("===================================================")
# => What is the mean of outcome.died in the whole data set?
print('The mean of outcome.died:')
mean(rhc$outcome.died)
# => How many subjects are treated?
print('The number of treated subjects:')
sum(rhc$swang1=='RHC')
# =>  What is the mean mortality (outcome.died) in this treated group?
print('The mean mortality of treated group:')
mean(rhc$swang1=='RHC' & rhc$outcome.died == 1)
# => How many subjects are not treated (i.e. in the control group)?
print('The number of not treated subjects:')
sum(rhc$swang1=='No RHC')
# => What is the mean mortality in this control group?
print('Mean mortality for not treated:')
mean(rhc$swang1=='No RHC' & rhc$outcome.died == 1)
print("===================================================")
print("===================================================")
# => How many different categories are in Cat1? Tip: use the levels() function on this variable.
rhc$cat1 <- as.factor(rhc$cat1)  #from chr to factor
print('There number of categories in cat1:')
nlevels(rhc$cat1)
print("===================================================")
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
print(cat1_list)
# ------- solution to be optimized later on ---------
rhc$CHF <- as.numeric(rhc$cat1=='CHF')
rhc$Cirrhosis <- as.numeric(rhc$cat1=='Cirrhosis')
rhc$Colon_Cancer <- as.numeric(rhc$cat1=='Colon Cancer')
rhc$Coma <- as.numeric(rhc$cat1=='Coma')
rhc$COPD <- as.numeric(rhc$cat1=='COPD')
rhc$Lung_Cancer <- as.numeric(rhc$cat1=='Lung Cancer')
rhc$MOSF_Malignancy <- as.numeric(rhc$cat1=='MOSF w/Malignancy')
rhc$MOSF_Sepsis <- as.numeric(rhc$cat1=='MOSF w/Sepsis')
print("===================================================")
rhc.small <- rhc
rhc.small %>% select(contains("ARF", "CHF", "Cirrhosis", "Colon_Cancer", "Coma", "COPD", "Lung_Cancer", "MOSF_Malignancy", "MOSF_Sepsis", "cardiohx", "chfhx", "dementhx", "psychhx",  "chrpulhx", "renalhx", "liverhx",  "gibledhx", "malighx",  "immunhx",  "transhx",  "amihx", "age", "female", "edu", "das2d3pc", "aps1", "scoma1", "meanbp1", "wblc1", "hrt1", "resp1", "temp1", "pafi1", "alb1", "hema1", "bili1", "crea1", "sod1", "pot1", "paco21", "ph1", "wtkilo1", "dnr1", "resp", "card", "neuro", "gastr", "renal", "meta", "hema", "seps", "trauma", "ortho", "adld3p", "urin1", "treatment.swang", "outcome.died"))
rhc.small<- rhc[ , c("ARF", "CHF", "Cirrhosis", "Colon_Cancer", "Coma", "COPD", "Lung_Cancer", "MOSF_Malignancy", "MOSF_Sepsis", "cardiohx", "chfhx", "dementhx", "psychhx",  "chrpulhx", "renalhx", "liverhx",  "gibledhx", "malighx",  "immunhx",  "transhx",  "amihx", "age", "female", "edu", "das2d3pc", "aps1", "scoma1", "meanbp1", "wblc1", "hrt1", "resp1", "temp1", "pafi1", "alb1", "hema1", "bili1", "crea1", "sod1", "pot1", "paco21", "ph1", "wtkilo1", "dnr1", "resp", "card", "neuro", "gastr", "renal", "meta", "hema", "seps", "trauma", "ortho", "adld3p", "urin1", "treatment.swang", "outcome.died")]
rhc.small<- rhc
rhc.small [ , c("ARF", "CHF", "Cirrhosis", "Colon_Cancer", "Coma", "COPD", "Lung_Cancer", "MOSF_Malignancy", "MOSF_Sepsis", "cardiohx", "chfhx", "dementhx", "psychhx",  "chrpulhx", "renalhx", "liverhx",  "gibledhx", "malighx",  "immunhx",  "transhx",  "amihx", "age", "female", "edu", "das2d3pc", "aps1", "scoma1", "meanbp1", "wblc1", "hrt1", "resp1", "temp1", "pafi1", "alb1", "hema1", "bili1", "crea1", "sod1", "pot1", "paco21", "ph1", "wtkilo1", "dnr1", "resp", "card", "neuro", "gastr", "renal", "meta", "hema", "seps", "trauma", "ortho", "adld3p", "urin1", "treatment.swang", "outcome.died")]
install.packages("tableone")
install.packages("Matching")
install.packages("tidyverse") #added
install.packages('rlang')     #added
# Recommended: add "dplyr" if you have used it before to make efficient preprocessing.
library(tableone) # This library allows us to calculate summary statistics about the variables including the SMD (standardized mean difference).
library(Matching) # This library will do the matching
library('dplyr')  #added
# Download rhc dataset from CANVAS and read it
rhc <- read.csv("rhc.csv")
print("===================================================")
# => how many rows does rhc contain?
print('The dataset contains 5735 rows')
# => What are the variable names?
print('The 63 variable names are the following below:')
names(rhc)
print("===================================================")
rhc$outcome.died <- as.numeric(rhc$death=='Yes')  # Again you might want, instead, to do all preprocessing with dplyr if you prefer
rhc$treatment.swang <- as.numeric(rhc$swang1=='RHC')
print("===================================================")
# => What is the mean of outcome.died in the whole data set?
print('The mean of outcome.died:')
mean(rhc$outcome.died)
# => How many subjects are treated?
print('The number of treated subjects:')
sum(rhc$swang1=='RHC')
# =>  What is the mean mortality (outcome.died) in this treated group?
print('The mean mortality of treated group:')
mean(rhc$swang1=='RHC' & rhc$outcome.died == 1)
# => How many subjects are not treated (i.e. in the control group)?
print('The number of not treated subjects:')
sum(rhc$swang1=='No RHC')
# => What is the mean mortality in this control group?
print('Mean mortality for not treated:')
mean(rhc$swang1=='No RHC' & rhc$outcome.died == 1)
print("===================================================")
print("===================================================")
# => How many different categories are in Cat1? Tip: use the levels() function on this variable.
rhc$cat1 <- as.factor(rhc$cat1)  #from chr to factor
print('There number of categories in cat1:')
nlevels(rhc$cat1)
print("===================================================")
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
print(cat1_list)
# ------- solution to be optimized later on ---------
rhc$CHF <- as.numeric(rhc$cat1=='CHF')
rhc$Cirrhosis <- as.numeric(rhc$cat1=='Cirrhosis')
rhc$Colon_Cancer <- as.numeric(rhc$cat1=='Colon Cancer')
rhc$Coma <- as.numeric(rhc$cat1=='Coma')
rhc$COPD <- as.numeric(rhc$cat1=='COPD')
rhc$Lung_Cancer <- as.numeric(rhc$cat1=='Lung Cancer')
rhc$MOSF_Malignancy <- as.numeric(rhc$cat1=='MOSF w/Malignancy')
rhc$MOSF_Sepsis <- as.numeric(rhc$cat1=='MOSF w/Sepsis')
print("===================================================")
install.packages("tableone")
install.packages("Matching")
install.packages("tidyverse") #added
install.packages('rlang')     #added
# Recommended: add "dplyr" if you have used it before to make efficient preprocessing.
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("tableone")
install.packages("Matching")
install.packages("tidyverse") #added
install.packages('rlang')     #added
# Recommended: add "dplyr" if you have used it before to make efficient preprocessing.
library(tableone) # This library allows us to calculate summary statistics about the variables including the SMD (standardized mean difference).
library(Matching) # This library will do the matching
library('dplyr')  #added
# Download rhc dataset from CANVAS and read it
rhc <- read.csv("rhc.csv")
rhc
# Download rhc dataset from CANVAS and read it
rhc <- read.csv("rhc.csv")
rhc ## just to check
View(rhc)
library(tableone) # This library allows us to calculate summary statistics about the variables including the SMD (standardized mean difference).
library(Matching) # This library will do the matching
library('dplyr')  #added
# Download rhc dataset from CANVAS and read it
rhc <- read.csv("rhc.csv")
print("===================================================")
# => how many rows does rhc contain?
print('The dataset contains 5735 rows')
# => What are the variable names?
print('The 63 variable names are the following below:')
names(rhc)
print("===================================================")
print("===================================================")
# => how many rows does rhc contain?
print('The dataset contains ',ncol(rhc),'rows)
# => What are the variable names?
print('The 63 variable names are the following below:')
print("===================================================")
# => how many rows does rhc contain?
print('The dataset contains 'ncol(rhc)'rows)
print("===================================================")
# => how many rows does rhc contain?
print('The dataset contains '+ncol(rhc)+'rows)
# => What are the variable names?
print('The 63 variable names are the following below:')
print("===================================================")
# => how many rows does rhc contain?
print('The dataset contains '+ncol(rhc)+'rows')
View(rhc)
print("===================================================")
# => how many rows does rhc contain?
print('The dataset contains '+NROW(rhc)+'rows')
print("===================================================")
# => how many rows does rhc contain?
print('The dataset contains '+dim(rhc)+'rows')
print("===================================================")
print(typeof(rhc))
# => how many rows does rhc contain?
print('The dataset contains '+dim(rhc)+'rows')
print("===================================================")
print(rhc[0])
# => how many rows does rhc contain?
print('The dataset contains '+dim(rhc)+'rows')
print("===================================================")
print(rhc[5])
# => how many rows does rhc contain?
print('The dataset contains '+dim(rhc)+'rows')
print("===================================================")
print(rhc(5))
print("===================================================")
print(rhc[5])
# => how many rows does rhc contain?
print('The dataset contains '+dim(rhc)+'rows')
print("===================================================")
print(lengths(rhc))
# => how many rows does rhc contain?
print('The dataset contains '+dim(rhc)+'rows')
print("===================================================")
print(lengths(rhc[0]))
# => how many rows does rhc contain?
print('The dataset contains '+dim(rhc)+'rows')
print("===================================================")
print(lengths(rhc[1]))
# => how many rows does rhc contain?
print('The dataset contains '+dim(rhc)+'rows')
rhc$outcome.died <- as.numeric(rhc$death=='Yes')  # Again you might want, instead, to do all preprocessing with dplyr if you prefer
rhc$treatment.swang <- as.numeric(rhc$swang1=='RHC')
rhc$outcome.died <- as.numeric(rhc$death=='Yes')  # Again you might want, instead, to do all preprocessing with dplyr if you prefer
rhc$treatment.swang <- as.numeric(rhc$swang1=='RHC')
print("===================================================")
# => how many rows does rhc contain?
print('The dataset contains 5735 rows')
# => What are the variable names?
print('The 63 variable names are the following below:')
names(rhc)
print("===================================================")
View(rhc)
print("===================================================")
# => What is the mean of outcome.died in the whole data set?
print('The mean of outcome.died:')
mean(rhc$outcome.died)
# => How many subjects are treated?
print('The number of treated subjects:')
sum(rhc$swang1=='RHC')
# =>  What is the mean mortality (outcome.died) in this treated group?
print('The mean mortality of treated group:')
mean(rhc$swang1=='RHC' & rhc$outcome.died == 1)
# => How many subjects are not treated (i.e. in the control group)?
print('The number of not treated subjects:')
sum(rhc$swang1=='No RHC')
# => What is the mean mortality in this control group?
print('Mean mortality for not treated:')
mean(rhc$swang1=='No RHC' & rhc$outcome.died == 1)
print("===================================================")
print("===================================================")
# => How many different categories are in Cat1? Tip: use the levels() function on this variable.
rhc$cat1 <- as.factor(rhc$cat1)  #from chr to factor
print('There number of categories in cat1:')
nlevels(rhc$cat1)
print("===================================================")
rhc$ARF <- as.numeric(rhc$cat1=='ARF')
print("===================================================")
# => Do the same (as we did for ARF) also for all other values of cat1 but ignore the category "Missing".
cat1_list <- list(levels(rhc$cat1))
print(cat1_list)
# ------- solution to be optimized later on ---------
rhc$CHF <- as.numeric(rhc$cat1=='CHF')
rhc$Cirrhosis <- as.numeric(rhc$cat1=='Cirrhosis')
rhc$Colon_Cancer <- as.numeric(rhc$cat1=='Colon Cancer')
rhc$Coma <- as.numeric(rhc$cat1=='Coma')
rhc$COPD <- as.numeric(rhc$cat1=='COPD')
rhc$Lung_Cancer <- as.numeric(rhc$cat1=='Lung Cancer')
rhc$MOSF_Malignancy <- as.numeric(rhc$cat1=='MOSF w/Malignancy')
rhc$MOSF_Sepsis <- as.numeric(rhc$cat1=='MOSF w/Sepsis')
print("===================================================")
rhc.small<- rhc
rhc.small[ , c("ARF", "CHF", "Cirrhosis", "Colon_Cancer", "Coma", "COPD", "Lung_Cancer", "MOSF_Malignancy", "MOSF_Sepsis", "cardiohx", "chfhx", "dementhx", "psychhx",  "chrpulhx", "renalhx", "liverhx",  "gibledhx", "malighx",  "immunhx",  "transhx",  "amihx", "age", "female", "edu", "das2d3pc", "aps1", "scoma1", "meanbp1", "wblc1", "hrt1", "resp1", "temp1", "pafi1", "alb1", "hema1", "bili1", "crea1", "sod1", "pot1", "paco21", "ph1", "wtkilo1", "dnr1", "resp", "card", "neuro", "gastr", "renal", "meta", "hema", "seps", "trauma", "ortho", "adld3p", "urin1", "treatment.swang", "outcome.died")]
str(rhc.small)
